import{N as S,z as g,O as A,H as R,Q as T,R as D,j as B,J as j,S as L,u as q,G as I,l as x,T as Q,U as F,V as H,K as M}from"./entry.BmzVr9WU.js";import{h as v,u as z}from"./preview.jKArDCUv.js";import{w as P,s as K}from"./utils.CUzmp3Ud.js";const N=r=>r==="defer"||r===!1;function te(...r){var _;const s=typeof r[r.length-1]=="string"?r.pop():void 0;typeof r[0]!="string"&&r.unshift(s);let[e,a,t={}]=r;if(typeof e!="string")throw new TypeError("[nuxt] [asyncData] key must be a string.");if(typeof a!="function")throw new TypeError("[nuxt] [asyncData] handler must be a function.");const n=j(),i=a,l=()=>null,f=()=>n.isHydrating?n.payload.data[e]:n.static.data[e];t.server=t.server??!0,t.default=t.default??l,t.getCachedData=t.getCachedData??f,t.lazy=t.lazy??!1,t.immediate=t.immediate??!0,t.deep=t.deep??S.deep,t.dedupe=t.dedupe??"cancel";const h=()=>![null,void 0].includes(t.getCachedData(e));if(!n._asyncData[e]||!t.immediate){(_=n.payload._errors)[e]??(_[e]=null);const u=t.deep?g:A;n._asyncData[e]={data:u(t.getCachedData(e)??t.default()),pending:g(!h()),error:R(n.payload._errors,e),status:g("idle")}}const o={...n._asyncData[e]};o.refresh=o.execute=(u={})=>{if(n._asyncDataPromises[e]){if(N(u.dedupe??t.dedupe))return n._asyncDataPromises[e];n._asyncDataPromises[e].cancelled=!0}if((u._initial||n.isHydrating&&u._initial!==!1)&&h())return Promise.resolve(t.getCachedData(e));o.pending.value=!0,o.status.value="pending";const y=new Promise((c,p)=>{try{c(i(n))}catch(k){p(k)}}).then(c=>{if(y.cancelled)return n._asyncDataPromises[e];let p=c;t.transform&&(p=t.transform(c)),t.pick&&(p=U(p,t.pick)),n.payload.data[e]=p,o.data.value=p,o.error.value=null,o.status.value="success"}).catch(c=>{if(y.cancelled)return n._asyncDataPromises[e];o.error.value=L(c),o.data.value=q(t.default()),o.status.value="error"}).finally(()=>{y.cancelled||(o.pending.value=!1,delete n._asyncDataPromises[e])});return n._asyncDataPromises[e]=y,n._asyncDataPromises[e]};const m=()=>o.refresh({_initial:!0}),O=t.server!==!1&&n.payload.serverRendered;{const u=I();if(u&&!u._nuxtOnBeforeMountCbs){u._nuxtOnBeforeMountCbs=[];const c=u._nuxtOnBeforeMountCbs;u&&(T(()=>{c.forEach(p=>{p()}),c.splice(0,c.length)}),D(()=>c.splice(0,c.length)))}O&&n.isHydrating&&(o.error.value||h())?(o.pending.value=!1,o.status.value=o.error.value?"error":"success"):u&&(n.payload.serverRendered&&n.isHydrating||t.lazy)&&t.immediate?u._nuxtOnBeforeMountCbs.push(m):t.immediate&&m(),t.watch&&B(t.watch,()=>o.refresh());const y=n.hook("app:data:refresh",async c=>{(!c||c.includes(e))&&await o.refresh()});u&&D(y)}const w=Promise.resolve(n._asyncDataPromises[e]).then(()=>o);return Object.assign(w,o),w}function U(r,s){const e={};for(const a of s)e[a]=r[a];return e}const C=(r,s)=>s.split(".").reduce((e,a)=>e&&e[a],r),$=(r,s)=>Object.keys(r).filter(s).reduce((e,a)=>Object.assign(e,{[a]:r[a]}),{}),re=r=>s=>Array.isArray(s)?s.map(e=>r(e)):r(s),b=r=>{const s=[],e=[];for(const a of r)["$","_"].includes(a)?s.push(a):e.push(a);return{prefixes:s,properties:e}},se=(r=[])=>s=>{if(r.length===0||!s)return s;const{prefixes:e,properties:a}=b(r);return $(s,t=>!a.includes(t)&&!e.includes(t[0]))},ne=(r=[])=>s=>{if(r.length===0||!s)return s;const{prefixes:e,properties:a}=b(r);return $(s,t=>a.includes(t)||e.includes(t[0]))},ae=(r,s)=>{const e=new Intl.Collator(s.$locale,{numeric:s.$numeric,caseFirst:s.$caseFirst,sensitivity:s.$sensitivity}),a=Object.keys(s).filter(t=>!t.startsWith("$"));for(const t of a)r=r.sort((n,i)=>{const l=[C(n,t),C(i,t)].map(f=>{if(f!==null)return f instanceof Date?f.toISOString():f});return s[t]===-1&&l.reverse(),e.compare(l[0],l[1])});return r},ie=(r,s="Expected an array")=>{if(!Array.isArray(r))throw new TypeError(s)},d=r=>Array.isArray(r)?r:[void 0,null].includes(r)?[]:[r],G=["sort","where","only","without"],J=(r,s)=>{const e={...s};for(const n of G)e[n]&&(e[n]=d(e[n]));const a=(n,i=l=>l)=>(...l)=>(e[n]=i(...l),t),t={params:()=>({...e,...e.where?{where:[...d(e.where)]}:{},...e.sort?{sort:[...d(e.sort)]}:{}}),only:a("only",d),without:a("without",d),where:a("where",n=>[...d(e.where),...d(n)]),sort:a("sort",n=>[...d(e.sort),...d(n)]),limit:a("limit",n=>parseInt(String(n),10)),skip:a("skip",n=>parseInt(String(n),10)),find:()=>r(t),findOne:()=>(e.first=!0,r(t)),findSurround:(n,i)=>(e.surround={query:n,...i},r(t)),locale:n=>t.where({_locale:n})};return t};function E(r){return JSON.stringify(r,V)}function V(r,s){return s instanceof RegExp?`--REGEX ${s.toString()}`:s}const W=r=>{let s=E(r);return s=typeof Buffer<"u"?Buffer.from(s).toString("base64"):btoa(s),s=s.replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,""),(s.match(/.{1,100}/g)||[]).join("/")},X=()=>async r=>{const{content:s}=x().public,e=r.params(),a=s.experimental.stripQueryParameters?P(`/query/${`${v(e)}.${s.integrity}`}/${W(e)}.json`):P(`/query/${v(e)}.${s.integrity}.json`);if(K())return(await M(()=>import("./client-db.F7JVyBoo.js"),__vite__mapDeps([0,1,2,3,4]),import.meta.url).then(i=>i.useContentDatabase())).fetch(r);const t=await $fetch(a,{method:"GET",responseType:"json",params:s.experimental.stripQueryParameters?void 0:{_params:E(e),previewToken:z().getPreviewToken()}});if(typeof t=="string"&&t.startsWith("<!DOCTYPE html>"))throw new Error("Not found");return t};function oe(r,...s){const{content:e}=x().public,a=J(X(),typeof r!="string"?r:{});let t;typeof r=="string"&&(t=Q(F(r,...s)));const n=a.params;return a.params=()=>{var l,f,h;const i=n();return t&&(i.where=i.where||[],i.first&&(i.where||[]).length===0?i.where.push({_path:H(t)}):i.where.push({_path:new RegExp(`^${t.replace(/[-[\]{}()*+.,^$\s/]/g,"\\$&")}`)})),(l=i.sort)!=null&&l.length||(i.sort=[{_file:1,$numeric:!0}]),e.locales.length&&((h=(f=i.where)==null?void 0:f.find(m=>m._locale))!=null&&h._locale||(i.where=i.where||[],i.where.push({_locale:e.defaultLocale}))),i},a}export{ie as a,d as b,re as c,ne as d,W as e,J as f,C as g,E as j,oe as q,ae as s,te as u,se as w};
function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = ["./client-db.F7JVyBoo.js","./entry.BmzVr9WU.js","./index.BphKXUyx.js","./preview.jKArDCUv.js","./utils.CUzmp3Ud.js"]
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}
