# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        os: [ubuntu-latest]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        check-latest: true
        # cache: 'npm'
    - name: Cache node_modules 📦
      uses: actions/cache@v2.1.4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - run: npm ci #--prefer-offline --no-audit
    - run: npm test



    # steps:
    #   - name: Checkout 🛎
    #     uses: actions/checkout@master

    #   - name: Setup node env 🏗
    #     uses: actions/setup-node@v2.1.5
    #     with:
    #       node-version: ${{ matrix.node }}
    #       check-latest: true

    #   - name: Cache node_modules 📦
    #     uses: actions/cache@v2.1.4
    #     with:
    #       path: ~/.npm
    #       key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
    #       restore-keys: |
    #         ${{ runner.os }}-node-

    #   - name: Install dependencies 👨🏻‍💻
    #     run: npm ci --prefer-offline --no-audit

    #   - name: Run linter 👀
    #     run: npm run lint

